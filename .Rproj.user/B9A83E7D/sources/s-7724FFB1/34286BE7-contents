---
title: "Assignment 5"
author: "Rafael Marino - 260885142"
date: November 2020
subtitle: CMS2 529
output:
  html_document:
    fig_height: 5
    fig_width: 8
    toc: yes
    toc_depth: 1
    toc_float:
      collapsed: no
    number_sections: yes
    theme: readable
    highlight: tango
  pdf_document:
    toc: yes
    toc_depth: '1'
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
library(fpp2)
options(digits=5)
```

Please submit a `zip` file including both the `Rmd` and `html` file produced by *knitting* this document with your modifications. Be sure to change the name of the author above.


# [2 points] Reading and decomposing retail data to expose hidden features

The file, `retail.xslx`, found on MyCourses, represent retail sales in various categories for different Australian states.

You can read the data into R with the following script:

```{r eval=FALSE}
retaildata <- readxl::read_excel("retail.xlsx", skip=1)
```
The second argument (skip=1) is required because the Excel sheet has two header rows.

We are interested in the column identified by *Series ID* `A3349873A`. To read it as a timeseries object, you should:

```{r eval=FALSE}
 retail.ts <- ts(retaildata[,"A3349873A"],
  frequency=12, start=c(1982,4))
```

Using the timeseries, `retail.ts`, decompose the series using X11. Does it reveal any outliers, or unusual features that are not immediately apparent when looking at the plot of the timeseries?

## Solution

```{r}
if (!require('readxl')) install.packages('readxl'); library('readxl')
filePath <- "/home/rafael/Dropbox/canada/mcgill/3fall2020 - ccs2 529 - data analytics/datasets/retail.xlsx"
retaildata <- readxl::read_excel(filePath, skip=1)
retailTs <- ts(retaildata[,"A3349873A"], frequency=12, start=c(1982,4))
# View(retail.ts)

if (!require('seasonal')) install.packages('seasonal'); library('seasonal')

# X11 Decomposition
retailTsX11 <- retailTs %>% seas(x11="")
autoplot(retailTsX11) +
  ggtitle("Australian Retail Sales - X11 Decomposition")
```
**Answer**  
0. There is a clear trend up in the overall series.  
1. There is a "sustained dip" from 1997 to 2003. This plateau is well captured by the trend plot.   
2. There is a huge spike circa 2001 in the remainder plot. That means neither seasonality nor trend were able to capture the observed variability.   
3. The effect of seasonality appears to taper off towards the end of the series, around the time that there is an abrupt (though short) spike up in the trend plot (circa 2011). This abruptness is captured in the remainder plot as volatility.   
**End Answer**  


# [3 points] Analyzing the decomposed Australian labour force

The figures below show the result of decomposing the number of persons in the civilian labour force in Australia each month from February 1978 to August 1995.

![Decomposition of the number of persons in the civilian labour force in Australia each month from February 1978 to August 1995](img/labour-1.png)

![Seasonal component from the decomposition shown in the previous figure](img/labour-2.png)

> [2 points] Write about 3–5 sentences describing the results of the decomposition. Pay particular attention to the scales of the graphs in making your interpretation.

**Answer: **  
Considering that the size of the bar is the degree of zoom required to better visualize each component plot, then the larger the bar, the bigger the zoom, the smaller the effect in the series. Therefore:  
1. Trend: visually I see no zoom whatsoever applied to the trend plot, which would indicate the trend plot and data plot are approximately on the same scale. Therefore the effect of the trend is big (no zoom required to see it). This is easily observable when comparing the two.  
2. Seasonality: it has the largest bar (zoom), so it has the smallest effect. Seasonality is also not constant and quite choppy. Further, it increases as the level of the series increases.  
3. Remainder: the remainder plot has a medium-sized bar relative to trend and season. The highlight of this plot is most likely the cluster of huge spikes circa 1991-1992. These capture very well the dip(s) seen in the original data around the same time. As hinted by the next question, this dip most is most likely a reflection of the [1991/1992 recession](https://en.wikipedia.org/wiki/Early_1990s_recession).   
4. As a back-of-the-envelope calculation: trend requires no zoom; season is roughly zoomed in 9x vs the original series; remainder is roughly zoomed in 4x vs the original series.   
**End Answer**  


> [1 point] Is the recession of 1991/1992 visible in the estimated components?

**Answer: **  
The recession is captured beautifully by the remainder as a cluster of highly significant negative spikes, please see above.   
**End Answer**  
  
  
# [8 Points] Decomposing Canadian gas production using several methods

This exercise uses the `cangas` data (monthly Canadian gas production in billions of cubic metres, January 1960 -- February 2005).

## [2 points] Explore seasonality

Plot the data using `autoplot`, `ggsubseriesplot` and `ggseasonplot` to look at the effect of the changing seasonality over time. What do you think is causing it to change so much?

```{r}
cangasTs <- cangas

# autoplot
autoplot(cangasTs) +
  ggtitle("Monthly Canadian Gas Production (1960-2005)")

# ggsubseriesplot
ggsubseriesplot(cangasTs) +
  ggtitle("Monthly Canadian Gas Production (1960-2005) - Subseries Plot")

# ggseasonplot
ggseasonplot(cangasTs) +
  ggtitle("Monthly Canadian Gas Production (1960-2005) - Season Plot")
```

**Answer: **    
1. In terms of trend, I think the Canadian Gas Production series (1960-2005) is a good candidate for a piecewise analysis. I would segment the series as follows:    
* Piece 1: 1960 to 1974. There is a clear upward trend and a slightly increasing seasonality.   
* Piece 2: 1975 to 1988. The trend is flat (i.e. it mostly oscillates horizontally trending up or down). This trend plateau is perfectly observable in the sub-series plot. Seasonality increases considerably. There appears to be a lot of volatility clustered around this period (see the largest spikes).   
* Piece 3: 1989 to 2001. There is a clear trend up. Volatility decreases at the beginning of the period and then it sort of stabilizes until the end.  
* Piece 4: 2002 to 2005. The trend goes back to flat and the effect of seasonality could be gearing up for another change.  

Regarding the question of what is causing the change in seasonality over time; it's hard to tell precisely without inside knowledge of the Canadian Gas Industry. I find the evolution of seasonality to be quite interesting. The four segments described above appear to be fairly distinct: it looks to me like there should be underlying, complex, deterministic processes that shape the series for periods at a time. These could be market supercycles, weather patterns, capacity-to-demand dynamics, political or regulatory events lasting years, etc.   

One observation is that two periods with relatively lower seasonality (1960-1974; 1989-2001) have clear upward trends. By contrast, the period in the middle (1975-1988), is flat trend-wise but nonetheless there are huge spikes in gas production. Maybe there was a specific reason during that period that rendered gas production more reactive to seasonal swings. Another observation is that towards the end of the series, Februaries take a dip in production relative to Januaries (season plot).  
**End Answer**    

## [2 points] Decompose with STL

Do an STL decomposition of the data. You will need to choose `s.window` to allow for the changing shape of the seasonal component.

```{r}
# STL: “Seasonal and Trend decomposition using Loess”
# "The mstl() function provides a convenient automated STL decomposition 
# using s.window=13, and t.window also chosen automatically. 
# This usually gives a good balance between overfitting the seasonality 
# and allowing it to slowly change over time." FPPS v2 6.6
cangasTsSTL <- cangasTs %>% stl(s.window=13, robust=TRUE)
autoplot(cangasTsSTL) +
  ggtitle("Monthly Canadian Gas Production (1960-2005) - STL Decomposition")
```

## [4 points] Compare STL with SEATS and X11

Compare the results with those obtained using SEATS and X11. How are they different?

```{r}
# SEATS
cangasTsSEATS <- cangasTs %>% seas()
autoplot(cangasTsSEATS) +
  ggtitle("Canadian Gas (1960-2005) - SEATS decomposition")

# X11
cangasTsX11 <- cangasTs %>% seas(x11="")
autoplot(cangasTsX11) +
  ggtitle("Canadian Gas (1960-2005) - X11 Decomposition")

# Trends from all Decomposition Methods
allTrends <- cbind(trendcycle(cangasTsSTL), 
                    trendcycle(cangasTsSEATS),
                    trendcycle(cangasTsX11))
autoplot(allTrends, facet=TRUE) +
  ggtitle("Canadian Gas (1960-2005) - Trend: STL, SEATS, X11")

# Seasonalities from all Decomposition Methods
allSeasons <- cbind(seasonal(cangasTsSTL), 
                           seasonal(cangasTsSEATS),
                           seasonal(cangasTsX11))
autoplot(allSeasons, facet=TRUE) +
  ggtitle("Canadian Gas (1960-2005) - Seasonality: STL, SEATS, X11")

# Remainder from all Decomposition Methods
allRemains <- cbind(remainder(cangasTsSTL), 
                    remainder(cangasTsSEATS),
                    remainder(cangasTsX11))
autoplot(allRemains, facet=TRUE) +
  ggtitle("Canadian Gas (1960-2005) - Remainder: STL, SEATS, X11")
```

**Answer: **  
1. Trend. The trends from all three component unsurprisingly follow a similar path. However, the difference lies in how "smooth" the trend lines are. STL offers the smoothest line; X11 shows small "dents" (hardly large enough to be called valleys or peaks I would say); and SEATS shows short jagged peaks as opposed to the smoother dents from X11.    
2. Seasonality. Interestingly, all 3 decomposition methods show more or less three distinctive (but continually changing) seasonal effects throughout the series. All three methods more or less agree in their results from 1975-1990; but they have notable differences for the preceding and following periods. SEATS and X11 share an almost indistinguishable seasonality plot, while STL shows an almost flipped seasonal component. Intuitively, I think STL more closely resembles the original series: I see small and growing seasonality at the beginning and then frequent jagged peaks towards the end.   
3. Remainder: SEATS again is the most "continually jagged" of the three (the jaggedness from the remainder and the trend are probably correlated). X11 also shows a lot of volatility in the form of significant but less frequent peaks relative to SEATS. It's interesting that X11 peaks at roughly the same spots that SEATS does, but with a lot less intermediate volatility throughout. However, I'm unable to relate all these significant peaks from SEATS and X11 to the original data set. In that regard I think the remainder from STL is also more representative of the series.  
Summarizing: I would decompose the Canadian Gas series with STL decomposition.  
**End Answer**  

# [2 points] Forecasting Sales

Use `stlf` to produce forecasts of the `fancy` series with either `method="naive"` or `method="rwdrift"`, whichever is most appropriate. Use the `lambda` argument if you think a Box-Cox transformation is required.

## Solution

```{r}
# fancy: Monthly sales for a souvenir shop on the wharf at a 
# beach resort town in Queensland, Australia.
fancyTs <- fancy
autoplot(fancy) +
  ggtitle('Fancy Series')

# To forecast a decomposed time series "It is usually assumed that 
# the seasonal component is unchanging, or changing extremely slowly"
# This assumption appears to hold true as per X11
# X11
fancyTsX11 <- fancyTs %>% seas(x11="")
autoplot(fancyTsX11) +
  ggtitle("Fancy Series - X11 Decomposition")

# Box-Cox. Squash them peaks.
lambda <- BoxCox.lambda(fancyTs)
fancyTsTransf <- BoxCox(fancyTs, lambda = lambda)
plt <- cbind(fancyTs, fancyTsTransf)
autoplot(plt, facet=TRUE) +
  ggtitle("Faceted Fancy and Fancy Transformed")

# stlf
# Reviewing 4 different forecast method combinations
fcastRwdrift <- stlf(fancyTs, method='rwdrift')
fcastNaive <- stlf(fancyTs, method='naive')
fcastRwdriftLambda <- stlf(fancyTs, method='rwdrift', lambda = lambda)
fcastNaiveLambda <- stlf(fancyTs, method='naive', lambda = lambda)
autoplot(fancyTs) +
  autolayer(fcastRwdrift, series = "Drift", PI=FALSE) +
  autolayer(fcastNaive, series = "Naive", PI=FALSE) +
  autolayer(fcastRwdriftLambda, series = "DriftBoxCox", PI=FALSE) +
  autolayer(fcastNaiveLambda, series = "NaiveBoxCox", PI=FALSE) +
  ggtitle("Fancy Decomposed Forecast")
```


**Answer**    
I would choose the _Box-Cox-transformed Drift_ forecast. I think it captures best the up trend that appears to be starting in 1991. At the same time, it does a good job with seasonality. Some further thoughts:  
1. Drift: doesn't appear to provide the necessary "continuity". Accounts for seasonality but no trend. Perhaps if the series is windowed such that is starts at 1991, Drift would be a great choice.     
2. Naive: accounts for seasonality, but poor continuity and ignores trend.     
3. NaiveBoxCox: captures seasonality well, good continuity, ignores trend.   
4. DriftBoxCox: captures seasonality well, good continuity, accounts for trend. However, perhaps it accounts for trend a bit too much: the final forecasts are considerable higher than all other forecasts. I would monitor results depending on context.   
**End Answer**   

